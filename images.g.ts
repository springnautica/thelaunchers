// Auto-generated code. Do not edit.
namespace myImages {

    helpers._registerFactory("image", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "image4":
            case "myImage2":return img`
. . . . . . . . . . . . . . . . 
. . . . . . f f f f . . . . . . 
. . . . . f 2 2 2 2 f . . . . . 
. . . . . f 2 9 9 8 f . . . . . 
. . . . . f 2 8 8 8 f . . . . . 
. . . . . f 2 2 2 2 f . . . . . 
. . . . . . f 2 2 f . f f f . . 
. . f f f f 2 2 2 2 f f 2 f . . 
. . f 2 2 2 2 2 2 2 2 2 2 f . . 
. . f 2 f f f 2 2 2 f f f f . . 
. . f f f . f 2 2 2 f . . . . . 
. . . . . . f 2 2 2 f . . . . . 
. . . f f f f 2 2 2 f f f f . . 
. . . f 2 2 2 2 2 2 2 2 2 f . . 
. . . f f f f f f f f f f f . . 
. . . . . . . . . . . . . . . . 
`;
            case "image3":
            case "myImage1":return img`
. . . . . . . . . . . . . . . . 
. . . . . . f f f f . . . . . . 
. . . . . f 7 7 7 7 f . . . . . 
. . . . . f 7 9 9 8 f . . . . . 
. . . . . f 7 8 8 8 f . . . . . 
. . . . . f 7 7 7 7 f . . . . . 
. . . . . . f 7 7 f . f f f . . 
. . f f f f 7 7 7 7 f f 7 f . . 
. . f 7 7 7 7 7 7 7 7 7 7 f . . 
. . f 7 f f f 7 7 7 f f f f . . 
. . f f f . f 7 7 7 f . . . . . 
. . . . . . f 7 7 7 f . . . . . 
. . . f f f f 7 7 7 f f f f . . 
. . . f 7 7 7 7 7 7 7 7 7 f . . 
. . . f f f f f f f f f f f . . 
. . . . . . . . . . . . . . . . 
`;
            case "image5":
            case "myImage3":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "image1":
            case "myImage":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . f f f f f . . . . . . . 
. . . f 7 7 7 7 7 f . . . . . . 
. . . f 7 7 9 9 8 f . . . . . . 
. . . f 7 7 8 8 8 f . . . . . . 
. . . f 7 7 7 7 7 f . . . . . . 
. . . . f 7 7 7 f . . . . . . . 
. f f f 7 7 7 7 7 f f . . . . . 
. f 7 7 7 7 7 7 7 7 f . . . . . 
. f 7 f 7 7 7 7 f 7 f . . . . . 
. f 7 f 7 7 7 7 f 7 f . . . . . 
. f f f 7 7 7 7 f f f . . . . . 
. . . . f 7 f 7 f . . . . . . . 
. . . . f 7 f 7 f . . . . . . . 
. . . . f f f f f . . . . . . . 
`;
            case "image2":
            case "myImage0":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . f f f f f . . . . . . . 
. . . f 2 2 2 2 2 f . . . . . . 
. . . f 2 2 9 9 8 f . . . . . . 
. . . f 2 2 8 8 8 f . . . . . . 
. . . f 2 2 2 2 2 f . . . . . . 
. . . . f 2 2 2 f . . . . . . . 
. f f f 2 2 2 2 2 f f . . . . . 
. f 2 2 2 2 2 2 2 2 f . . . . . 
. f 2 f 2 2 2 2 f 2 f . . . . . 
. f 2 f 2 2 2 2 f 2 f . . . . . 
. f f f 2 2 2 2 f f f . . . . . 
. . . . f 2 f 2 f . . . . . . . 
. . . . f 2 f 2 f . . . . . . . 
. . . . f f f f f . . . . . . . 
`;
            case "image6":
            case "myImage4":return img`
. . . . . . . b . . . . . . . . 
. . . . . . b c b . . . . . . . 
. . . . . b c c c b . . . . . . 
. . . . . e d d d e . . . . . . 
. . . . . e d d d e . . . . . . 
. . . . . e 9 9 8 e . . . . . . 
. . . . . e 8 8 8 e . . . . . . 
. . . . . e 8 8 8 e . . . . . . 
. . . . . e d d d e . . . . . . 
. . . . f e d d d e f . . . . . 
. . . . f 4 5 5 5 4 f . . . . . 
. . . . f 4 4 5 4 4 f . . . . . 
. . . f f . 4 4 4 . f f . . . . 
. . . . . . 4 . 4 . . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "image7":
            case "myImage5":return img`
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 
9 8 8 9 9 8 8 8 9 9 9 8 8 8 8 9 
9 9 9 9 9 9 9 8 8 9 9 9 9 8 8 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 8 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
`;
        }
        return null;
    })

    helpers._registerFactory("animation", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "myAnim0":
            case "anim2":return [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . f f f f . . . . . . . . 
. . . f 7 7 7 7 f . . . . . . . 
. . . f 7 9 9 8 f . . . . . . . 
. . . f 7 8 8 8 f . . . . . . . 
. . . . f 7 7 f . . . . . . . . 
. f f f 7 7 7 7 f f f . . . . . 
. f 7 7 7 7 7 7 7 7 f . . . . . 
. f 7 f 7 7 7 7 f 7 f . . . . . 
. f 7 f 7 7 7 7 f 7 f . . . . . 
. f f f 7 f f 7 f f f . . . . . 
. . . f 7 f f 7 f . . . . . . . 
. . . f 7 f f 7 f . . . . . . . 
. . . f f f f f f . . . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . f f f f . . . . . . . . 
. . . f 7 7 7 7 f . . . . . . . 
. . . f 7 9 9 8 f . . f f f . . 
. . . f 7 8 8 8 f . . f 7 f . . 
. . . . f 7 7 f . . . f 7 f . . 
f f f f 7 7 7 7 f f f f 7 f . . 
f 7 7 7 7 7 7 7 7 7 7 7 7 f . . 
f 7 f f f 7 7 7 f f f f f f . . 
f 7 f . f 7 7 7 f . . . . . . . 
f f f . f 7 7 7 f . . . . . . . 
. f f f f 7 7 7 f f f f . . . . 
. f 7 7 7 7 7 7 7 7 7 f . . . . 
. f f f f f f f f f f f . . . . 
. . . . . . . . . . . . . . . . 
`];
            case "myAnim1":
            case "anim3":return [img`
. 3 . . . . . . . . . . . 4 . . 
. 3 3 . . . . . . . . . 4 4 . . 
. 3 d 3 . . 4 4 . . 4 4 d 4 . . 
. . 3 5 3 4 5 5 4 4 d d 4 4 . . 
. . 3 d 5 d 1 1 d 5 5 d 4 4 . . 
. . 4 5 5 1 1 1 1 5 1 1 5 4 . . 
. 4 5 5 5 5 1 1 5 1 1 1 d 4 4 . 
. 4 d 5 1 1 5 5 5 1 1 1 5 5 4 . 
. 4 4 5 1 1 5 5 5 5 5 d 5 5 4 . 
. . 4 3 d 5 5 5 d 5 5 d d d 4 . 
. 4 5 5 d 5 5 5 d d d 5 5 4 . . 
. 4 5 5 d 3 5 d d 3 d 5 5 4 . . 
. 4 4 d d 4 d d d 4 3 d d 4 . . 
. . 4 5 4 4 4 4 4 4 4 4 4 . . . 
. 4 5 4 . . 4 4 4 . . . 4 4 . . 
. 4 4 . . . . . . . . . . 4 4 . 
`];
            case "myAnim2":
            case "anim4":return [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`];
            case "myAnim":
            case "anim1":return [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . f f f f . . . . . . . . 
. . . f 2 2 2 2 f . . . . . . . 
. . . f 2 9 9 8 f . . . . . . . 
. . . f 2 8 8 8 f . . . . . . . 
. . . . f 2 2 f . . . . . . . . 
. f f f 2 2 2 2 f f f . . . . . 
. f 2 2 2 2 2 2 2 2 f . . . . . 
. f 2 f 2 2 2 2 f 2 f . . . . . 
. f 2 f 2 2 2 2 f 2 f . . . . . 
. f f f 2 f f 2 f f f . . . . . 
. . . f 2 f f 2 f . . . . . . . 
. . . f 2 f f 2 f . . . . . . . 
. . . f f f f f f . . . . . . . 
. . . . . . . . . . . . . . . . 
`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . f f f f . . . . . . . . 
. . . f 2 2 2 2 f . . . . . . . 
. . . f 2 9 9 8 f . . f f f . . 
. . . f 2 8 8 8 f . . f 2 f . . 
. . . . f 2 2 f . . . f 2 f . . 
f f f f 2 2 2 2 f f f f 2 f . . 
f 2 2 2 2 2 2 2 2 2 2 2 2 f . . 
f 2 f f f 2 2 2 f f f f f f . . 
f 2 f . f 2 2 2 f . . . . . . . 
f f f . f 2 2 2 f . . . . . . . 
. f f f f 2 2 2 f f f f . . . . 
. f 2 2 2 2 2 2 2 2 2 f . . . . 
. f f f f f f f f f f f . . . . 
. . . . . . . . . . . . . . . . 
`];
        }
        return null;
    })

    helpers._registerFactory("song", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "song1":
            case "mySong":return hex`00780004080300`;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
